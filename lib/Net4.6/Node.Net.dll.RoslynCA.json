{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "2.6.0.0",
        "fileVersion": "2.6.0.62329 (5429b35d)",
        "semanticVersion": "2.6.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS0618",
          "level": "warning",
          "message": "'UIElement.BitmapEffect' is obsolete: 'BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.'",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Controls/ContentControl.cs",
                "region": {
                  "startLine": 180,
                  "startColumn": 26,
                  "endLine": 180,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS0618",
          "level": "warning",
          "message": "'UIElement.BitmapEffect' is obsolete: 'BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.'",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Controls/ContentControl.cs",
                "region": {
                  "startLine": 183,
                  "startColumn": 19,
                  "endLine": 183,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS0618",
          "level": "warning",
          "message": "'UIElement.BitmapEffectInput' is obsolete: 'BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.'",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Controls/ContentControl.cs",
                "region": {
                  "startLine": 190,
                  "startColumn": 26,
                  "endLine": 190,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS0618",
          "level": "warning",
          "message": "'UIElement.BitmapEffectInput' is obsolete: 'BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.'",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Controls/ContentControl.cs",
                "region": {
                  "startLine": 193,
                  "startColumn": 19,
                  "endLine": 193,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS0618",
          "level": "warning",
          "message": "'UIElement.PersistId' is obsolete: 'PersistId is an obsolete property and may be removed in a future release.  The value of this property is not defined.'",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Controls/ContentControl.cs",
                "region": {
                  "startLine": 481,
                  "startColumn": 26,
                  "endLine": 481,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'IDictionaryItemsSourceAdapter' to match camel case naming rules, consider using 'DictionaryItemsSourceAdapter'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Adapters/IDictionaryItemsSourceAdapter.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 25,
                  "endLine": 6,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1118",
          "level": "warning",
          "message": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Collections/KeyValuePair.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 27,
                  "endLine": 13,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 27,
                  "endLine": 15,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/IRead.Extension.cs",
                "region": {
                  "startLine": 73,
                  "startColumn": 25,
                  "endLine": 73,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/IWrite.Extension.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 17,
                  "endLine": 30,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/IWrite.Extension.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 17,
                  "endLine": 32,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/Matrix3D.Extension.cs",
                "region": {
                  "startLine": 178,
                  "startColumn": 1,
                  "endLine": 178,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'JSONWriter' to match camel case naming rules, consider using 'JsonWriter'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 25,
                  "endLine": 11,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/Point.Extension.cs",
                "region": {
                  "startLine": 4,
                  "startColumn": 1,
                  "endLine": 4,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/Point.Extension.cs",
                "region": {
                  "startLine": 263,
                  "startColumn": 5,
                  "endLine": 263,
                  "endColumn": 95
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/Visual.Extension.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 17,
                  "endLine": 35,
                  "endColumn": 120
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Reader.cs",
                "region": {
                  "startLine": 61,
                  "startColumn": 1,
                  "endLine": 61,
                  "endColumn": 6
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2223",
          "level": "warning",
          "message": "Change the visibility of 'xaml_markers' or make it 'const' or 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Reader.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 30,
                  "endLine": 38,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make 'jsonReader' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Reader.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 44,
                  "endLine": 94,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2386",
          "level": "warning",
          "message": "Use an immutable collection or reduce the accessibility of this field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Reader.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 30,
                  "endLine": 42,
                  "endColumn": 4
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1104",
          "level": "warning",
          "message": "Make this field 'private' and encapsulate it in a 'public' property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Reader.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 30,
                  "endLine": 42,
                  "endColumn": 4
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Reader.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 22,
                  "endLine": 11,
                  "endColumn": 28
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Reader.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 16,
                  "endLine": 11,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Reader.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 16,
                  "endLine": 11,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'Reader' because it implements 'ISerializable'.",
              "1": "Add a 'private' constructor 'Reader(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 204,
                  "startColumn": 1,
                  "endLine": 204,
                  "endColumn": 6
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 498,
                  "startColumn": 8,
                  "endLine": 498,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 505,
                  "startColumn": 5,
                  "endLine": 505,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 524,
                  "startColumn": 4,
                  "endLine": 524,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 564,
                  "startColumn": 4,
                  "endLine": 564,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 577,
                  "startColumn": 4,
                  "endLine": 577,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Diagnostics/Command.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 27,
                  "endLine": 8,
                  "endColumn": 34
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Diagnostics/Command.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 21,
                  "endLine": 8,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add a 'protected' constructor 'Command(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 127,
                  "startColumn": 20,
                  "endLine": 127,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 13,
                  "endLine": 18,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 13,
                  "endLine": 36,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 9,
                  "endLine": 84,
                  "endColumn": 140
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 117,
                  "startColumn": 1,
                  "endLine": 117,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/SpatialElement.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 18,
                  "endLine": 7,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/SpatialElement.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 12,
                  "endLine": 7,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/SpatialElement.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 12,
                  "endLine": 7,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'SpatialElement' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'SpatialElement(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Diagnostics/CommandGroup.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 18,
                  "endLine": 6,
                  "endColumn": 30
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Diagnostics/CommandGroup.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 12,
                  "endLine": 6,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Diagnostics/CommandGroup.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 12,
                  "endLine": 6,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'CommandGroup' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'CommandGroup(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 4,
                  "endLine": 16,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 1,
                  "endLine": 19,
                  "endColumn": 5
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 92,
                  "startColumn": 7,
                  "endLine": 92,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2342",
          "level": "warning",
          "message": "Rename this enumeration to match the regular expression: '^([A-Z]{1,3}[a-z0-9]+)*([A-Z]{2})?$'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 17,
                  "endLine": 10,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Diagnostics/ConsoleCommand.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 18,
                  "endLine": 6,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Diagnostics/ConsoleCommand.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 12,
                  "endLine": 6,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Diagnostics/ConsoleCommand.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 12,
                  "endLine": 6,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'ConsoleCommand' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'ConsoleCommand(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 109,
                  "startColumn": 33,
                  "endLine": 109,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 114,
                  "startColumn": 33,
                  "endLine": 114,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 200,
                  "startColumn": 41,
                  "endLine": 200,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 142,
                  "startColumn": 13,
                  "endLine": 142,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/UnrecognizedSignatureException.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 15,
                  "endLine": 13,
                  "endColumn": 45
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/UnrecognizedSignatureException.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 9,
                  "endLine": 13,
                  "endColumn": 14
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/UnrecognizedSignatureException.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 9,
                  "endLine": 13,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'UnrecognizedSignatureException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'UnrecognizedSignatureException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S1939",
          "level": "warning",
          "message": "'ReadOnlyDictionary' implements 'IDictionary' so 'IDictionary' can be removed from the inheritance list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Collections/ReadOnlyElement.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 65,
                  "endLine": 6,
                  "endColumn": 78
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "redundantIndex": "2"
            }
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make 'jsonWriter' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Writer.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 28,
                  "endLine": 67,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make 'bitmapSourceWriter' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Writer.cs",
                "region": {
                  "startLine": 68,
                  "startColumn": 36,
                  "endLine": 68,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/ImageSourceReader.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 11,
                  "endLine": 9,
                  "endColumn": 28
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/ImageSourceReader.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 11,
                  "endLine": 9,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/ImageSourceReader.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 10,
                  "endLine": 16,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/ImageSourceReader.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 21,
                  "endLine": 11,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'ImageSourceReader' or mark the type as 'sealed'.",
              "1": "Modify 'ImageSourceReader.~ImageSourceReader()' so that it calls 'Dispose(false)' and then returns.",
              "2": "'ImageSourceReader.Dispose()' should only invoke 'Dispose(true)' and 'GC.SuppressFinalize(this)'."
            }
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make 'bytes' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/Signature.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 24,
                  "endLine": 15,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/SignatureReader.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 11,
                  "endLine": 8,
                  "endColumn": 26
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/SignatureReader.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 11,
                  "endLine": 8,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/SignatureReader.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 10,
                  "endLine": 26,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/SignatureReader.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 21,
                  "endLine": 21,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'SignatureReader' or mark the type as 'sealed'.",
              "1": "Modify 'SignatureReader.~SignatureReader()' so that it calls 'Dispose(false)' and then returns.",
              "2": "'SignatureReader.Dispose()' should only invoke 'Dispose(true)' and 'GC.SuppressFinalize(this)'."
            }
          }
        },
        {
          "ruleId": "S1450",
          "level": "warning",
          "message": "Remove the 'iChar' field and declare it as a local variable in the relevant methods.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 28,
                  "endLine": 57,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1450",
          "level": "warning",
          "message": "Remove the 'iPeek' field and declare it as a local variable in the relevant methods.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 28,
                  "endLine": 56,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'JSONReader' to match camel case naming rules, consider using 'JsonReader'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 24,
                  "endLine": 9,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1118",
          "level": "warning",
          "message": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Units/Angle.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 11,
                  "endLine": 7,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1450",
          "level": "warning",
          "message": "Remove the 'stringResult' field and declare it as a local variable in the relevant methods.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 108,
                  "startColumn": 25,
                  "endLine": 108,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1118",
          "level": "warning",
          "message": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Units/Length.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 11,
                  "endLine": 7,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2223",
          "level": "warning",
          "message": "Change the visibility of 'RotationXKey' or make it 'const' or 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Matrix3DFactory.cs",
                "region": {
                  "startLine": 55,
                  "startColumn": 30,
                  "endLine": 55,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2223",
          "level": "warning",
          "message": "Change the visibility of 'RotationYKey' or make it 'const' or 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Matrix3DFactory.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 30,
                  "endLine": 56,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2223",
          "level": "warning",
          "message": "Change the visibility of 'RotationZKey' or make it 'const' or 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Matrix3DFactory.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 30,
                  "endLine": 57,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make 'cache' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/MeshGeometry3DFactory.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 52,
                  "endLine": 28,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2292",
          "level": "warning",
          "message": "Make this an auto-implemented property and remove its backing field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 54,
                  "startColumn": 38,
                  "endLine": 54,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make 'namedCache' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 125,
                  "startColumn": 39,
                  "endLine": 125,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2930",
          "level": "warning",
          "message": "'Dispose' of 'webClient'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 107,
                  "startColumn": 37,
                  "endLine": 107,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make 'propertyGrid' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Controls/PropertyControl.cs",
                "region": {
                  "startLine": 86,
                  "startColumn": 45,
                  "endLine": 86,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Element.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 18,
                  "endLine": 9,
                  "endColumn": 25
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Element.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 12,
                  "endLine": 9,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Element.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 12,
                  "endLine": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'Element' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'Element(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Collections/KeyValuePair.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 21,
                  "endLine": 11,
                  "endColumn": 81
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'IsInstanceOfType()' method instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Writer.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 25,
                  "endLine": 21,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "False"
            }
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Writer.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 21,
                  "endLine": 30,
                  "endColumn": 74
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "True"
            }
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Writer.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 25,
                  "endLine": 36,
                  "endColumn": 83
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "True"
            }
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Writer.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 29,
                  "endLine": 46,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "True"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 20 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Writer.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 21,
                  "endLine": 15,
                  "endColumn": 26
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Writer.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 13,
                  "endLine": 17,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Writer.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 31,
                  "endLine": 17,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Writer.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 17,
                  "endLine": 19,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Writer.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 21,
                  "endLine": 21,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Writer.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 13,
                  "endLine": 28,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Writer.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 17,
                  "endLine": 30,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Writer.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 17,
                  "endLine": 34,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Writer.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 21,
                  "endLine": 36,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Writer.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 21,
                  "endLine": 44,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Writer.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 25,
                  "endLine": 46,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Writer.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 25,
                  "endLine": 50,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+1",
              "7": "+3 (incl 2 for nesting)",
              "8": "+1",
              "9": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'a' to 'x' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Collections/MetaData.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 42,
                  "endLine": 9,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'b' to 'y' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Collections/MetaData.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 59,
                  "endLine": 9,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Collections/ReadOnlyDictionary.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 37,
                  "endLine": 15,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1168",
          "level": "warning",
          "message": "Return an empty collection instead of null.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Collections/ReadOnlyElement.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 74,
                  "endLine": 17,
                  "endColumn": 86
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1854",
          "level": "warning",
          "message": "Remove this useless assignment to local variable 'filestream'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Writer.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 24,
                  "endLine": 64,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'w' to 'obj' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Collections/MetaData.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 46,
                  "endLine": 19,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/WordReader.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 17,
                  "endLine": 38,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/WordReader.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 13,
                  "endLine": 36,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1854",
          "level": "warning",
          "message": "Remove this useless assignment to local variable 'memory'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/Image.Extension.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 20,
                  "endLine": 21,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Collections/MetaData.cs",
                "region": {
                  "startLine": 52,
                  "startColumn": 37,
                  "endLine": 52,
                  "endColumn": 83
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "True"
            }
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Collections/KeyValuePair.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 21,
                  "endLine": 21,
                  "endColumn": 81
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Collections/KeyValuePair.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 21,
                  "endLine": 25,
                  "endColumn": 76
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Collections/KeyValuePair.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 21,
                  "endLine": 40,
                  "endColumn": 81
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Collections/KeyValuePair.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 21,
                  "endLine": 44,
                  "endColumn": 76
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'target_type' to 'targetType' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Visual3DFactory.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 35,
                  "endLine": 8,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/Visual3D.Extension.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 17,
                  "endLine": 14,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/Visual3D.Extension.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 13,
                  "endLine": 12,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 20 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/WordReader.cs",
                "region": {
                  "startLine": 61,
                  "startColumn": 23,
                  "endLine": 61,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/WordReader.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 13,
                  "endLine": 64,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/WordReader.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 13,
                  "endLine": 69,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/WordReader.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 17,
                  "endLine": 72,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/WordReader.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 37,
                  "endLine": 72,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/WordReader.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 21,
                  "endLine": 76,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/WordReader.cs",
                "region": {
                  "startLine": 78,
                  "startColumn": 25,
                  "endLine": 78,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/WordReader.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 21,
                  "endLine": 82,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/WordReader.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 25,
                  "endLine": 85,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/WordReader.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 21,
                  "endLine": 90,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+1",
              "4": "+3 (incl 2 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+4 (incl 3 for nesting)",
              "8": "+1"
            }
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/TypeNameFactory.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 13,
                  "endLine": 15,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'target_type' to 'targetType' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/TypeNameFactory.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 35,
                  "endLine": 9,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/TypeNameFactory.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 35,
                  "endLine": 12,
                  "endColumn": 89
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "True"
            }
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'target_type' to 'targetType' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Transform3DFactory.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 35,
                  "endLine": 8,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'target_type' to 'targetType' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StringFactory.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 35,
                  "endLine": 8,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StringFactory.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 21,
                  "endLine": 12,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "True"
            }
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StringFactory.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 21,
                  "endLine": 13,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "True"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Controls/PropertyControl.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 5,
                  "endLine": 44,
                  "endColumn": 7
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Controls/PropertyControl.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 4,
                  "endLine": 42,
                  "endColumn": 6
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 71,
                  "endLine": 28,
                  "endColumn": 74
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1117",
          "level": "warning",
          "message": "Rename 'propertyGrid' which hides the field with the same name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Controls/PropertyControl.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 8,
                  "endLine": 62,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'target_type' to 'targetType' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 35,
                  "endLine": 18,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 17,
                  "endLine": 22,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 13,
                  "endLine": 20,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 21,
                  "endLine": 24,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 17,
                  "endLine": 22,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 17,
                  "endLine": 29,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 13,
                  "endLine": 27,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 25,
                  "endLine": 24,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 25,
                  "endLine": 31,
                  "endColumn": 74
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "True"
            }
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/Reader.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 19,
                  "endLine": 34,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 75,
                  "endLine": 48,
                  "endColumn": 78
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 21 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 28,
                  "endLine": 34,
                  "endColumn": 36
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 13,
                  "endLine": 37,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 43,
                  "endLine": 37,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 13,
                  "endLine": 38,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 17,
                  "endLine": 41,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 17,
                  "endLine": 42,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 21,
                  "endLine": 44,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 25,
                  "endLine": 46,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 29,
                  "endLine": 48,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 47,
                  "endLine": 48,
                  "endColumn": 49
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 29,
                  "endLine": 49,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+1",
              "5": "+3 (incl 2 for nesting)",
              "6": "+4 (incl 3 for nesting)",
              "7": "+5 (incl 4 for nesting)",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 77,
                  "startColumn": 25,
                  "endLine": 77,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 21,
                  "endLine": 75,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 16 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 61,
                  "startColumn": 30,
                  "endLine": 61,
                  "endColumn": 47
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 13,
                  "endLine": 64,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 13,
                  "endLine": 67,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 17,
                  "endLine": 70,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 71,
                  "startColumn": 17,
                  "endLine": 71,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 73,
                  "startColumn": 21,
                  "endLine": 73,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 21,
                  "endLine": 75,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 77,
                  "startColumn": 25,
                  "endLine": 77,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 81,
                  "startColumn": 13,
                  "endLine": 81,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+1",
              "4": "+3 (incl 2 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+4 (incl 3 for nesting)",
              "7": "+1"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Diagnostics/Executor.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 17,
                  "endLine": 22,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Diagnostics/Executor.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 13,
                  "endLine": 20,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 12,
                  "endLine": 32,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 99,
                  "startColumn": 57,
                  "endLine": 99,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 107,
                  "startColumn": 76,
                  "endLine": 107,
                  "endColumn": 79
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 118,
                  "startColumn": 23,
                  "endLine": 118,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 24 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 30,
                  "endLine": 85,
                  "endColumn": 34
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 88,
                  "startColumn": 13,
                  "endLine": 88,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 91,
                  "startColumn": 13,
                  "endLine": 91,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 17,
                  "endLine": 94,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 95,
                  "startColumn": 17,
                  "endLine": 95,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 97,
                  "startColumn": 21,
                  "endLine": 97,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 99,
                  "startColumn": 25,
                  "endLine": 99,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 25,
                  "endLine": 100,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 102,
                  "startColumn": 21,
                  "endLine": 102,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 105,
                  "startColumn": 21,
                  "endLine": 105,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 107,
                  "startColumn": 25,
                  "endLine": 107,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 107,
                  "startColumn": 43,
                  "endLine": 107,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 108,
                  "startColumn": 25,
                  "endLine": 108,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 112,
                  "startColumn": 13,
                  "endLine": 112,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+1",
              "4": "+3 (incl 2 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+1",
              "7": "+1",
              "8": "+3 (incl 2 for nesting)",
              "9": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 17,
                  "endLine": 76,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 13,
                  "endLine": 74,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2486",
          "level": "warning",
          "message": "Handle the exception or explain in a comment why it can be ignored.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 118,
                  "startColumn": 17,
                  "endLine": 118,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 40 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 43,
                  "startColumn": 23,
                  "endLine": 43,
                  "endColumn": 29
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 13,
                  "endLine": 45,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 13,
                  "endLine": 46,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 17,
                  "endLine": 48,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 21,
                  "endLine": 50,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 54,
                  "startColumn": 21,
                  "endLine": 54,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 54,
                  "startColumn": 37,
                  "endLine": 54,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 60,
                  "startColumn": 13,
                  "endLine": 60,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 17,
                  "endLine": 62,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 21,
                  "endLine": 64,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 68,
                  "startColumn": 21,
                  "endLine": 68,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 68,
                  "startColumn": 37,
                  "endLine": 68,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 13,
                  "endLine": 74,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 36,
                  "endLine": 74,
                  "endColumn": 38
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 58,
                  "endLine": 74,
                  "endColumn": 60
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 17,
                  "endLine": 76,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 81,
                  "startColumn": 21,
                  "endLine": 81,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 25,
                  "endLine": 83,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 21,
                  "endLine": 90,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 97,
                  "startColumn": 13,
                  "endLine": 97,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 102,
                  "startColumn": 21,
                  "endLine": 102,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 118,
                  "startColumn": 17,
                  "endLine": 118,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/StreamFactory.cs",
                "region": {
                  "startLine": 120,
                  "startColumn": 13,
                  "endLine": 120,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+1",
              "13": "+1",
              "14": "+2 (incl 1 for nesting)",
              "15": "+3 (incl 2 for nesting)",
              "16": "+4 (incl 3 for nesting)",
              "17": "+1",
              "18": "+1",
              "19": "+2 (incl 1 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "20": "+2 (incl 1 for nesting)",
              "21": "+1",
              "3": "+3 (incl 2 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+1",
              "6": "+1",
              "7": "+2 (incl 1 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 10,
                  "endLine": 75,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 9,
                  "endLine": 76,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 77,
                  "startColumn": 9,
                  "endLine": 77,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 78,
                  "startColumn": 9,
                  "endLine": 78,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 79,
                  "startColumn": 9,
                  "endLine": 79,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 9,
                  "endLine": 80,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 86,
                  "startColumn": 11,
                  "endLine": 86,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "True"
            }
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 12,
                  "endLine": 89,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "True"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 18 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 66,
                  "startColumn": 21,
                  "endLine": 66,
                  "endColumn": 36
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 4,
                  "endLine": 69,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 73,
                  "startColumn": 5,
                  "endLine": 73,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 6,
                  "endLine": 75,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 42,
                  "endLine": 75,
                  "endColumn": 44
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 6,
                  "endLine": 84,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 86,
                  "startColumn": 7,
                  "endLine": 86,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 87,
                  "startColumn": 7,
                  "endLine": 87,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 8,
                  "endLine": 89,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+1",
              "4": "+1",
              "5": "+4 (incl 3 for nesting)",
              "6": "+1",
              "7": "+5 (incl 4 for nesting)"
            }
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 156,
                  "startColumn": 52,
                  "endLine": 156,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 164,
                  "startColumn": 75,
                  "endLine": 164,
                  "endColumn": 78
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3217",
          "level": "warning",
          "message": "Either change the type of 'mo' to 'System.Management.ManagementBaseObject' or iterate on a generic collection of type 'System.Management.ManagementObject'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Diagnostics/Executor.cs",
                "region": {
                  "startLine": 81,
                  "startColumn": 22,
                  "endLine": 81,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 30 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 30,
                  "endLine": 143,
                  "endColumn": 34
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 146,
                  "startColumn": 13,
                  "endLine": 146,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 146,
                  "startColumn": 43,
                  "endLine": 146,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 148,
                  "startColumn": 13,
                  "endLine": 148,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 151,
                  "startColumn": 17,
                  "endLine": 151,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 152,
                  "startColumn": 17,
                  "endLine": 152,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 154,
                  "startColumn": 21,
                  "endLine": 154,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 156,
                  "startColumn": 25,
                  "endLine": 156,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 157,
                  "startColumn": 25,
                  "endLine": 157,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 159,
                  "startColumn": 21,
                  "endLine": 159,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 160,
                  "startColumn": 21,
                  "endLine": 160,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 162,
                  "startColumn": 25,
                  "endLine": 162,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 164,
                  "startColumn": 29,
                  "endLine": 164,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 164,
                  "startColumn": 47,
                  "endLine": 164,
                  "endColumn": 49
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/TextReader.Extension.cs",
                "region": {
                  "startLine": 165,
                  "startColumn": 29,
                  "endLine": 165,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+4 (incl 3 for nesting)",
              "11": "+5 (incl 4 for nesting)",
              "12": "+1",
              "13": "+1",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+1",
              "5": "+3 (incl 2 for nesting)",
              "6": "+4 (incl 3 for nesting)",
              "7": "+1",
              "8": "+1",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 145,
                  "startColumn": 6,
                  "endLine": 145,
                  "endColumn": 8
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 5,
                  "endLine": 143,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2190",
          "level": "warning",
          "message": "Add a way to break out of this method's recursion.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/Object.Extension.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 19,
                  "endLine": 33,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1905",
          "level": "warning",
          "message": "Remove this unnecessary cast to 'T'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/Object.Extension.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 12,
                  "endLine": 35,
                  "endColumn": 13
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this unused method parameter 'item'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Controls/GridView.cs",
                "region": {
                  "startLine": 68,
                  "startColumn": 37,
                  "endLine": 68,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "True"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this unused method parameter 'name'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Controls/GridView.cs",
                "region": {
                  "startLine": 68,
                  "startColumn": 49,
                  "endLine": 68,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "True"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 166,
                  "startColumn": 7,
                  "endLine": 166,
                  "endColumn": 9
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 164,
                  "startColumn": 6,
                  "endLine": 164,
                  "endColumn": 8
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 164,
                  "startColumn": 10,
                  "endLine": 164,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "True"
            }
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'target_type' to 'targetType' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ReaderFactory.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 35,
                  "endLine": 12,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ReaderFactory.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 17,
                  "endLine": 16,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ReaderFactory.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 13,
                  "endLine": 14,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ReaderFactory.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 21,
                  "endLine": 18,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ReaderFactory.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 17,
                  "endLine": 16,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ReaderFactory.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 29,
                  "endLine": 23,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ReaderFactory.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 25,
                  "endLine": 21,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ReaderFactory.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 21,
                  "endLine": 16,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'IsInstanceOfType()' method instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ReaderFactory.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 41,
                  "endLine": 35,
                  "endColumn": 89
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "False"
            }
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/ImageSourceReader.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 13,
                  "endLine": 25,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 41 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ReaderFactory.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 23,
                  "endLine": 12,
                  "endColumn": 29
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ReaderFactory.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 13,
                  "endLine": 14,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ReaderFactory.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 17,
                  "endLine": 16,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ReaderFactory.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 21,
                  "endLine": 18,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ReaderFactory.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 25,
                  "endLine": 21,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ReaderFactory.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 29,
                  "endLine": 23,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ReaderFactory.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 33,
                  "endLine": 27,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ReaderFactory.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 33,
                  "endLine": 33,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ReaderFactory.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 37,
                  "endLine": 35,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ReaderFactory.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 37,
                  "endLine": 36,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+5 (incl 4 for nesting)",
              "5": "+6 (incl 5 for nesting)",
              "6": "+6 (incl 5 for nesting)",
              "7": "+7 (incl 6 for nesting)",
              "8": "+7 (incl 6 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 16 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 178,
                  "startColumn": 23,
                  "endLine": 178,
                  "endColumn": 36
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 180,
                  "startColumn": 4,
                  "endLine": 180,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 181,
                  "startColumn": 4,
                  "endLine": 181,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 182,
                  "startColumn": 4,
                  "endLine": 182,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 183,
                  "startColumn": 4,
                  "endLine": 183,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 189,
                  "startColumn": 5,
                  "endLine": 189,
                  "endColumn": 12
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 193,
                  "startColumn": 6,
                  "endLine": 193,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 193,
                  "startColumn": 24,
                  "endLine": 193,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 195,
                  "startColumn": 5,
                  "endLine": 195,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 195,
                  "startColumn": 22,
                  "endLine": 195,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 198,
                  "startColumn": 4,
                  "endLine": 198,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 201,
                  "startColumn": 5,
                  "endLine": 201,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+2 (incl 1 for nesting)",
              "2": "+1",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+1",
              "7": "+2 (incl 1 for nesting)",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'target_type' to 'targetType' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 29,
                  "endLine": 10,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 222,
                  "startColumn": 6,
                  "endLine": 222,
                  "endColumn": 8
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 220,
                  "startColumn": 5,
                  "endLine": 220,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 228,
                  "startColumn": 5,
                  "endLine": 228,
                  "endColumn": 7
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 226,
                  "startColumn": 4,
                  "endLine": 226,
                  "endColumn": 6
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2589",
          "level": "warning",
          "message": "Change this condition so that it does not always evaluate to 'true'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 8,
                  "endLine": 22,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 220,
                  "startColumn": 26,
                  "endLine": 220,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 138,
                  "startColumn": 6,
                  "endLine": 138,
                  "endColumn": 8
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 136,
                  "startColumn": 5,
                  "endLine": 136,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1854",
          "level": "warning",
          "message": "Remove this useless assignment to local variable 'ch'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 124,
                  "startColumn": 11,
                  "endLine": 124,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove this unused 'ichar' local variable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 150,
                  "startColumn": 9,
                  "endLine": 150,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/Object.Extension.cs",
                "region": {
                  "startLine": 96,
                  "startColumn": 8,
                  "endLine": 96,
                  "endColumn": 10
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/Object.Extension.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 7,
                  "endLine": 94,
                  "endColumn": 9
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2583",
          "level": "warning",
          "message": "Change this condition so that it does not always evaluate to 'false'; some subsequent code is never executed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/Object.Extension.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 7,
                  "endLine": 85,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/Object.Extension.cs",
                "region": {
                  "startLine": 86,
                  "startColumn": 4,
                  "endLine": 100,
                  "endColumn": 5
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/Object.Extension.cs",
                "region": {
                  "startLine": 81,
                  "startColumn": 13,
                  "endLine": 81,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/ImageSourceReader.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 19,
                  "endLine": 70,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 24 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/Object.Extension.cs",
                "region": {
                  "startLine": 61,
                  "startColumn": 24,
                  "endLine": 61,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/Object.Extension.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 4,
                  "endLine": 64,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/Object.Extension.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 4,
                  "endLine": 69,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/Object.Extension.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 5,
                  "endLine": 72,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/Object.Extension.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 26,
                  "endLine": 72,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/Object.Extension.cs",
                "region": {
                  "startLine": 79,
                  "startColumn": 6,
                  "endLine": 79,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/Object.Extension.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 4,
                  "endLine": 85,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/Object.Extension.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 24,
                  "endLine": 85,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/Object.Extension.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 5,
                  "endLine": 89,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/Object.Extension.cs",
                "region": {
                  "startLine": 91,
                  "startColumn": 6,
                  "endLine": 91,
                  "endColumn": 13
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/Object.Extension.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 7,
                  "endLine": 94,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/Object.Extension.cs",
                "region": {
                  "startLine": 96,
                  "startColumn": 8,
                  "endLine": 96,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+5 (incl 4 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+1",
              "4": "+3 (incl 2 for nesting)",
              "5": "+1",
              "6": "+1",
              "7": "+2 (incl 1 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 243,
                  "startColumn": 7,
                  "endLine": 243,
                  "endColumn": 9
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 241,
                  "startColumn": 6,
                  "endLine": 241,
                  "endColumn": 8
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'IsInstanceOfType()' method instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 241,
                  "startColumn": 10,
                  "endLine": 241,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "False"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 26 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 235,
                  "startColumn": 23,
                  "endLine": 235,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 237,
                  "startColumn": 4,
                  "endLine": 237,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 239,
                  "startColumn": 5,
                  "endLine": 239,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 241,
                  "startColumn": 6,
                  "endLine": 241,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 243,
                  "startColumn": 7,
                  "endLine": 243,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 245,
                  "startColumn": 8,
                  "endLine": 245,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 249,
                  "startColumn": 8,
                  "endLine": 249,
                  "endColumn": 12
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 251,
                  "startColumn": 9,
                  "endLine": 251,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 260,
                  "startColumn": 6,
                  "endLine": 260,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 235,
                  "startColumn": 23,
                  "endLine": 235,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+5 (incl 4 for nesting)",
              "5": "+1",
              "6": "+6 (incl 5 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+1 (recursion)"
            }
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove this unused 'idictionary' local variable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/Object.Extension.cs",
                "region": {
                  "startLine": 107,
                  "startColumn": 8,
                  "endLine": 107,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 280,
                  "startColumn": 8,
                  "endLine": 280,
                  "endColumn": 10
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 278,
                  "startColumn": 7,
                  "endLine": 278,
                  "endColumn": 9
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 282,
                  "startColumn": 9,
                  "endLine": 282,
                  "endColumn": 11
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 280,
                  "startColumn": 8,
                  "endLine": 280,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 284,
                  "startColumn": 10,
                  "endLine": 284,
                  "endColumn": 12
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 282,
                  "startColumn": 9,
                  "endLine": 282,
                  "endColumn": 11
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 37 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 265,
                  "startColumn": 23,
                  "endLine": 265,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 267,
                  "startColumn": 4,
                  "endLine": 267,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 269,
                  "startColumn": 5,
                  "endLine": 269,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 271,
                  "startColumn": 6,
                  "endLine": 271,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 273,
                  "startColumn": 7,
                  "endLine": 273,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 275,
                  "startColumn": 6,
                  "endLine": 275,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 278,
                  "startColumn": 7,
                  "endLine": 278,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 280,
                  "startColumn": 8,
                  "endLine": 280,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 282,
                  "startColumn": 9,
                  "endLine": 282,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 284,
                  "startColumn": 10,
                  "endLine": 284,
                  "endColumn": 12
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 290,
                  "startColumn": 6,
                  "endLine": 290,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 265,
                  "startColumn": 23,
                  "endLine": 265,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1 (recursion)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+1",
              "5": "+4 (incl 3 for nesting)",
              "6": "+5 (incl 4 for nesting)",
              "7": "+6 (incl 5 for nesting)",
              "8": "+7 (incl 6 for nesting)",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 79,
                  "startColumn": 5,
                  "endLine": 79,
                  "endColumn": 7
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 77,
                  "startColumn": 4,
                  "endLine": 77,
                  "endColumn": 6
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 6,
                  "endLine": 90,
                  "endColumn": 8
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 88,
                  "startColumn": 5,
                  "endLine": 88,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 25,
                  "endLine": 16,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 24,
                  "endLine": 17,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 24,
                  "endLine": 18,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 24,
                  "endLine": 19,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 24,
                  "endLine": 20,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 24,
                  "endLine": 21,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 29,
                  "endLine": 27,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "True"
            }
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 33,
                  "endLine": 30,
                  "endColumn": 86
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "True"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 18 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 27,
                  "endLine": 9,
                  "endColumn": 42
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 13,
                  "endLine": 12,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 17,
                  "endLine": 14,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 21,
                  "endLine": 16,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 57,
                  "endLine": 16,
                  "endColumn": 59
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 21,
                  "endLine": 25,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 25,
                  "endLine": 27,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 25,
                  "endLine": 28,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 29,
                  "endLine": 30,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+1",
              "4": "+1",
              "5": "+4 (incl 3 for nesting)",
              "6": "+1",
              "7": "+5 (incl 4 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 19 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 19,
                  "endLine": 74,
                  "endColumn": 39
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 4,
                  "endLine": 76,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 77,
                  "startColumn": 4,
                  "endLine": 77,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 79,
                  "startColumn": 5,
                  "endLine": 79,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 4,
                  "endLine": 83,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 4,
                  "endLine": 85,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 88,
                  "startColumn": 5,
                  "endLine": 88,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 6,
                  "endLine": 90,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 7,
                  "endLine": 94,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 98,
                  "startColumn": 4,
                  "endLine": 98,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 5,
                  "endLine": 100,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 19,
                  "endLine": 74,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1 (recursion)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+1",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+4 (incl 3 for nesting)",
              "8": "+1",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S2589",
          "level": "warning",
          "message": "Change this condition so that it does not always evaluate to 'true'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 115,
                  "startColumn": 10,
                  "endLine": 115,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3443",
          "level": "warning",
          "message": "Remove this use of 'GetType' on a 'System.Type'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 178,
                  "startColumn": 77,
                  "endLine": 178,
                  "endColumn": 87
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3443",
          "level": "warning",
          "message": "Remove this use of 'GetType' on a 'System.Type'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 194,
                  "startColumn": 76,
                  "endLine": 194,
                  "endColumn": 86
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 234,
                  "startColumn": 5,
                  "endLine": 234,
                  "endColumn": 7
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 232,
                  "startColumn": 4,
                  "endLine": 232,
                  "endColumn": 6
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 174,
                  "startColumn": 44,
                  "endLine": 174,
                  "endColumn": 88
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 178,
                  "startColumn": 12,
                  "endLine": 178,
                  "endColumn": 99
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 186,
                  "startColumn": 38,
                  "endLine": 186,
                  "endColumn": 88
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 190,
                  "startColumn": 43,
                  "endLine": 190,
                  "endColumn": 85
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 194,
                  "startColumn": 13,
                  "endLine": 194,
                  "endColumn": 98
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 239,
                  "startColumn": 13,
                  "endLine": 239,
                  "endColumn": 96
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 17,
                  "endLine": 85,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 13,
                  "endLine": 83,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'IsInstanceOfType()' method instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 234,
                  "startColumn": 10,
                  "endLine": 234,
                  "endColumn": 74
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "False"
            }
          }
        },
        {
          "ruleId": "S1854",
          "level": "warning",
          "message": "Remove this useless assignment to local variable 'ch'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 215,
                  "startColumn": 12,
                  "endLine": 215,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 38 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 169,
                  "startColumn": 18,
                  "endLine": 169,
                  "endColumn": 28
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 172,
                  "startColumn": 4,
                  "endLine": 172,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 174,
                  "startColumn": 5,
                  "endLine": 174,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 176,
                  "startColumn": 5,
                  "endLine": 176,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 181,
                  "startColumn": 4,
                  "endLine": 181,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 183,
                  "startColumn": 5,
                  "endLine": 183,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 186,
                  "startColumn": 6,
                  "endLine": 186,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 188,
                  "startColumn": 5,
                  "endLine": 188,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 190,
                  "startColumn": 6,
                  "endLine": 190,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 192,
                  "startColumn": 6,
                  "endLine": 192,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 204,
                  "startColumn": 4,
                  "endLine": 204,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 209,
                  "startColumn": 4,
                  "endLine": 209,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 220,
                  "startColumn": 5,
                  "endLine": 220,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 224,
                  "startColumn": 5,
                  "endLine": 224,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 232,
                  "startColumn": 4,
                  "endLine": 232,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 232,
                  "startColumn": 24,
                  "endLine": 232,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 234,
                  "startColumn": 5,
                  "endLine": 234,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 237,
                  "startColumn": 6,
                  "endLine": 237,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 241,
                  "startColumn": 6,
                  "endLine": 241,
                  "endColumn": 13
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 243,
                  "startColumn": 7,
                  "endLine": 243,
                  "endColumn": 9
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "11": "+2 (incl 1 for nesting)",
              "12": "+2 (incl 1 for nesting)",
              "13": "+1",
              "14": "+1",
              "15": "+2 (incl 1 for nesting)",
              "16": "+3 (incl 2 for nesting)",
              "17": "+3 (incl 2 for nesting)",
              "18": "+4 (incl 3 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+1",
              "7": "+3 (incl 2 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove this unused 'lastKey' local variable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/JSONReader.cs",
                "region": {
                  "startLine": 213,
                  "startColumn": 9,
                  "endLine": 213,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 50 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 35,
                  "endLine": 37,
                  "endColumn": 43
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 13,
                  "endLine": 40,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 13,
                  "endLine": 44,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 17,
                  "endLine": 46,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 47,
                  "startColumn": 17,
                  "endLine": 47,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 21,
                  "endLine": 49,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 21,
                  "endLine": 50,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 53,
                  "startColumn": 13,
                  "endLine": 53,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 53,
                  "startColumn": 34,
                  "endLine": 53,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 55,
                  "startColumn": 17,
                  "endLine": 55,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 21,
                  "endLine": 58,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 61,
                  "startColumn": 17,
                  "endLine": 61,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 21,
                  "endLine": 64,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 66,
                  "startColumn": 25,
                  "endLine": 66,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 25,
                  "endLine": 67,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 21,
                  "endLine": 69,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 25,
                  "endLine": 72,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 29,
                  "endLine": 74,
                  "endColumn": 32
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 13,
                  "endLine": 83,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 17,
                  "endLine": 85,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 48,
                  "endLine": 85,
                  "endColumn": 50
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 88,
                  "startColumn": 21,
                  "endLine": 88,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+2 (incl 1 for nesting)",
              "11": "+3 (incl 2 for nesting)",
              "12": "+4 (incl 3 for nesting)",
              "13": "+4 (incl 3 for nesting)",
              "14": "+3 (incl 2 for nesting)",
              "15": "+4 (incl 3 for nesting)",
              "16": "+5 (incl 4 for nesting)",
              "17": "+1",
              "18": "+2 (incl 1 for nesting)",
              "19": "+1",
              "2": "+2 (incl 1 for nesting)",
              "20": "+3 (incl 2 for nesting)",
              "3": "+1",
              "4": "+3 (incl 2 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+1",
              "7": "+1",
              "8": "+2 (incl 1 for nesting)",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 20 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 126,
                  "startColumn": 19,
                  "endLine": 126,
                  "endColumn": 44
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 128,
                  "startColumn": 4,
                  "endLine": 128,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 131,
                  "startColumn": 5,
                  "endLine": 131,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 133,
                  "startColumn": 4,
                  "endLine": 133,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 136,
                  "startColumn": 5,
                  "endLine": 136,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 139,
                  "startColumn": 6,
                  "endLine": 139,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 142,
                  "startColumn": 7,
                  "endLine": 142,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 6,
                  "endLine": 144,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 148,
                  "startColumn": 7,
                  "endLine": 148,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Model3DFactory.cs",
                "region": {
                  "startLine": 153,
                  "startColumn": 5,
                  "endLine": 153,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+1",
              "7": "+4 (incl 3 for nesting)",
              "8": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 377,
                  "startColumn": 6,
                  "endLine": 377,
                  "endColumn": 8
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 375,
                  "startColumn": 5,
                  "endLine": 375,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 22 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 370,
                  "startColumn": 19,
                  "endLine": 370,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 373,
                  "startColumn": 4,
                  "endLine": 373,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 375,
                  "startColumn": 5,
                  "endLine": 375,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 377,
                  "startColumn": 6,
                  "endLine": 377,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 379,
                  "startColumn": 5,
                  "endLine": 379,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 381,
                  "startColumn": 4,
                  "endLine": 381,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 384,
                  "startColumn": 5,
                  "endLine": 384,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 386,
                  "startColumn": 4,
                  "endLine": 386,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 388,
                  "startColumn": 5,
                  "endLine": 388,
                  "endColumn": 12
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 390,
                  "startColumn": 6,
                  "endLine": 390,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 392,
                  "startColumn": 5,
                  "endLine": 392,
                  "endColumn": 12
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 394,
                  "startColumn": 6,
                  "endLine": 394,
                  "endColumn": 8
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+3 (incl 2 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+2 (incl 1 for nesting)",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+1",
              "7": "+2 (incl 1 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove this unused 'iname' local variable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 383,
                  "startColumn": 9,
                  "endLine": 383,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/SignatureReader.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 17,
                  "endLine": 34,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/SignatureReader.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 13,
                  "endLine": 32,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'target_type' to 'targetType' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/MeshGeometry3DFactory.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 35,
                  "endLine": 10,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/MeshGeometry3DFactory.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 17,
                  "endLine": 14,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/MeshGeometry3DFactory.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 13,
                  "endLine": 12,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/MeshGeometry3DFactory.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 17,
                  "endLine": 18,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/MeshGeometry3DFactory.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 13,
                  "endLine": 16,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1854",
          "level": "warning",
          "message": "Remove this useless assignment to local variable 'memory'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 20,
                  "endLine": 36,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/MeshGeometry3DFactory.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 21,
                  "endLine": 14,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "True"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/MeshGeometry3DFactory.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 17,
                  "endLine": 33,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/MeshGeometry3DFactory.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 13,
                  "endLine": 31,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 128,
                  "startColumn": 17,
                  "endLine": 128,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 125,
                  "startColumn": 13,
                  "endLine": 125,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove this unused 'textSignature' local variable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/SignatureReader.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 17,
                  "endLine": 69,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'target_type' to 'targetType' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Matrix3DFactory.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 35,
                  "endLine": 10,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Matrix3DFactory.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 17,
                  "endLine": 14,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Matrix3DFactory.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 13,
                  "endLine": 12,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 125,
                  "startColumn": 17,
                  "endLine": 125,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "True"
            }
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 52,
                  "endLine": 143,
                  "endColumn": 95
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1168",
          "level": "warning",
          "message": "Return an empty collection instead of null.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IEnumerable.Extension.cs",
                "region": {
                  "startLine": 123,
                  "startColumn": 33,
                  "endLine": 123,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2184",
          "level": "warning",
          "message": "Cast one of the operands of this division to 'double'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/FrameworkElement.Extension.cs",
                "region": {
                  "startLine": 63,
                  "startColumn": 20,
                  "endLine": 63,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Matrix3DFactory.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 21,
                  "endLine": 14,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "True"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 461,
                  "startColumn": 5,
                  "endLine": 461,
                  "endColumn": 7
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 459,
                  "startColumn": 4,
                  "endLine": 459,
                  "endColumn": 6
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 425,
                  "startColumn": 10,
                  "endLine": 425,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "True"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 50 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 400,
                  "startColumn": 19,
                  "endLine": 400,
                  "endColumn": 22
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 402,
                  "startColumn": 4,
                  "endLine": 402,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 403,
                  "startColumn": 4,
                  "endLine": 403,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 407,
                  "startColumn": 5,
                  "endLine": 407,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 409,
                  "startColumn": 6,
                  "endLine": 409,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 411,
                  "startColumn": 6,
                  "endLine": 411,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 414,
                  "startColumn": 7,
                  "endLine": 414,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 418,
                  "startColumn": 4,
                  "endLine": 418,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 421,
                  "startColumn": 5,
                  "endLine": 421,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 425,
                  "startColumn": 6,
                  "endLine": 425,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 426,
                  "startColumn": 6,
                  "endLine": 426,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 430,
                  "startColumn": 6,
                  "endLine": 430,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 438,
                  "startColumn": 4,
                  "endLine": 438,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 441,
                  "startColumn": 5,
                  "endLine": 441,
                  "endColumn": 12
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 443,
                  "startColumn": 6,
                  "endLine": 443,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 445,
                  "startColumn": 5,
                  "endLine": 445,
                  "endColumn": 12
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 447,
                  "startColumn": 6,
                  "endLine": 447,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 449,
                  "startColumn": 5,
                  "endLine": 449,
                  "endColumn": 12
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 451,
                  "startColumn": 6,
                  "endLine": 451,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 453,
                  "startColumn": 5,
                  "endLine": 453,
                  "endColumn": 12
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 455,
                  "startColumn": 6,
                  "endLine": 455,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 459,
                  "startColumn": 4,
                  "endLine": 459,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 461,
                  "startColumn": 5,
                  "endLine": 461,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+3 (incl 2 for nesting)",
              "11": "+1",
              "12": "+2 (incl 1 for nesting)",
              "13": "+3 (incl 2 for nesting)",
              "14": "+2 (incl 1 for nesting)",
              "15": "+3 (incl 2 for nesting)",
              "16": "+2 (incl 1 for nesting)",
              "17": "+3 (incl 2 for nesting)",
              "18": "+2 (incl 1 for nesting)",
              "19": "+3 (incl 2 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "20": "+1",
              "21": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+1",
              "7": "+2 (incl 1 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 17 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ChildrenFactory.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 23,
                  "endLine": 11,
                  "endColumn": 29
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ChildrenFactory.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 13,
                  "endLine": 13,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ChildrenFactory.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 13,
                  "endLine": 14,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ChildrenFactory.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 13,
                  "endLine": 15,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ChildrenFactory.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 17,
                  "endLine": 18,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ChildrenFactory.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 21,
                  "endLine": 20,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ChildrenFactory.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 17,
                  "endLine": 25,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ChildrenFactory.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 21,
                  "endLine": 27,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ChildrenFactory.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 25,
                  "endLine": 30,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+2 (incl 1 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove this unused 'valueType' local variable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 424,
                  "startColumn": 10,
                  "endLine": 424,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'target_type' to 'targetType' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/CloneFactory.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 35,
                  "endLine": 12,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'IsInstanceOfType()' method instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/CloneFactory.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 17,
                  "endLine": 15,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "False"
            }
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'IsInstanceOfType()' method instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/CloneFactory.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 42,
                  "endLine": 23,
                  "endColumn": 87
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "False"
            }
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/CloneFactory.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 17,
                  "endLine": 31,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "True"
            }
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 474,
                  "startColumn": 26,
                  "endLine": 474,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 22,
                  "endLine": 72,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "True"
            }
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 73,
                  "startColumn": 22,
                  "endLine": 73,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "True"
            }
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 22,
                  "endLine": 74,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "True"
            }
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 22,
                  "endLine": 75,
                  "endColumn": 73
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "True"
            }
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 22,
                  "endLine": 76,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "True"
            }
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/SymbolFactory.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 21,
                  "endLine": 19,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "True"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 16 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/SymbolFactory.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 23,
                  "endLine": 13,
                  "endColumn": 29
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/SymbolFactory.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 13,
                  "endLine": 15,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/SymbolFactory.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 13,
                  "endLine": 16,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/SymbolFactory.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 17,
                  "endLine": 19,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/SymbolFactory.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 21,
                  "endLine": 23,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/SymbolFactory.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 25,
                  "endLine": 26,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/SymbolFactory.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 29,
                  "endLine": 29,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+5 (incl 4 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 519,
                  "startColumn": 7,
                  "endLine": 519,
                  "endColumn": 9
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 517,
                  "startColumn": 6,
                  "endLine": 517,
                  "endColumn": 8
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 16 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 482,
                  "startColumn": 23,
                  "endLine": 482,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 484,
                  "startColumn": 4,
                  "endLine": 484,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 486,
                  "startColumn": 5,
                  "endLine": 486,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 489,
                  "startColumn": 6,
                  "endLine": 489,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 494,
                  "startColumn": 7,
                  "endLine": 494,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 495,
                  "startColumn": 7,
                  "endLine": 495,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 504,
                  "startColumn": 5,
                  "endLine": 504,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 482,
                  "startColumn": 23,
                  "endLine": 482,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+1",
              "6": "+1 (recursion)"
            }
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove this unused 't' local variable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Readers/Signature.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 21,
                  "endLine": 48,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'target_type' to 'targetType' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/GeometryModel3DFactory.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 35,
                  "endLine": 10,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 17,
                  "endLine": 100,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 113,
                  "startColumn": 25,
                  "endLine": 113,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 113,
                  "startColumn": 61,
                  "endLine": 113,
                  "endColumn": 94
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 114,
                  "startColumn": 24,
                  "endLine": 114,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 114,
                  "startColumn": 58,
                  "endLine": 114,
                  "endColumn": 89
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 115,
                  "startColumn": 24,
                  "endLine": 115,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/GeometryModel3DFactory.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 17,
                  "endLine": 32,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/GeometryModel3DFactory.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 13,
                  "endLine": 30,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2589",
          "level": "warning",
          "message": "Change this condition so that it does not always evaluate to 'true'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/GeometryModel3DFactory.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 21,
                  "endLine": 32,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 16 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/GeometryModel3DFactory.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 33,
                  "endLine": 27,
                  "endColumn": 53
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/GeometryModel3DFactory.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 13,
                  "endLine": 29,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/GeometryModel3DFactory.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 13,
                  "endLine": 30,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/GeometryModel3DFactory.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 17,
                  "endLine": 32,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/GeometryModel3DFactory.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 36,
                  "endLine": 32,
                  "endColumn": 38
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/GeometryModel3DFactory.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/GeometryModel3DFactory.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 25,
                  "endLine": 39,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/GeometryModel3DFactory.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 25,
                  "endLine": 41,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+1",
              "4": "+3 (incl 2 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+4 (incl 3 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1854",
          "level": "warning",
          "message": "Remove this useless assignment to local variable 'mstream'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/IRead.Extension.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 21,
                  "endLine": 41,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove this unused 'ctvi' local variable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/TreeViewItemFactory.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 21,
                  "endLine": 57,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 562,
                  "startColumn": 28,
                  "endLine": 562,
                  "endColumn": 107
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 570,
                  "startColumn": 35,
                  "endLine": 570,
                  "endColumn": 81
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 575,
                  "startColumn": 29,
                  "endLine": 575,
                  "endColumn": 102
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 589,
                  "startColumn": 37,
                  "endLine": 589,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1168",
          "level": "warning",
          "message": "Return an empty collection instead of null.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 559,
                  "startColumn": 24,
                  "endLine": 559,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 19 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 557,
                  "startColumn": 29,
                  "endLine": 557,
                  "endColumn": 41
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 559,
                  "startColumn": 4,
                  "endLine": 559,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 560,
                  "startColumn": 4,
                  "endLine": 560,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 562,
                  "startColumn": 4,
                  "endLine": 562,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 567,
                  "startColumn": 4,
                  "endLine": 567,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 570,
                  "startColumn": 5,
                  "endLine": 570,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 572,
                  "startColumn": 4,
                  "endLine": 572,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 575,
                  "startColumn": 5,
                  "endLine": 575,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 578,
                  "startColumn": 4,
                  "endLine": 578,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 582,
                  "startColumn": 5,
                  "endLine": 582,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 586,
                  "startColumn": 5,
                  "endLine": 586,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 589,
                  "startColumn": 6,
                  "endLine": 589,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 589,
                  "startColumn": 34,
                  "endLine": 589,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 593,
                  "startColumn": 6,
                  "endLine": 593,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 557,
                  "startColumn": 29,
                  "endLine": 557,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+3 (incl 2 for nesting)",
              "11": "+1",
              "12": "+1",
              "13": "+1 (recursion)",
              "2": "+1",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+1",
              "6": "+2 (incl 1 for nesting)",
              "7": "+1",
              "8": "+2 (incl 1 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 154,
                  "startColumn": 21,
                  "endLine": 154,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 152,
                  "startColumn": 17,
                  "endLine": 152,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 156,
                  "startColumn": 24,
                  "endLine": 156,
                  "endColumn": 96
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "True"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 22 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 139,
                  "startColumn": 22,
                  "endLine": 139,
                  "endColumn": 38
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 148,
                  "startColumn": 13,
                  "endLine": 148,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 151,
                  "startColumn": 17,
                  "endLine": 151,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 151,
                  "startColumn": 57,
                  "endLine": 151,
                  "endColumn": 59
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 152,
                  "startColumn": 17,
                  "endLine": 152,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 154,
                  "startColumn": 21,
                  "endLine": 154,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 154,
                  "startColumn": 60,
                  "endLine": 154,
                  "endColumn": 62
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 158,
                  "startColumn": 25,
                  "endLine": 158,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 160,
                  "startColumn": 29,
                  "endLine": 160,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 164,
                  "startColumn": 29,
                  "endLine": 164,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 172,
                  "startColumn": 13,
                  "endLine": 172,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 173,
                  "startColumn": 13,
                  "endLine": 173,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+1",
              "6": "+4 (incl 3 for nesting)",
              "7": "+5 (incl 4 for nesting)",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/IRead.Extension.cs",
                "region": {
                  "startLine": 108,
                  "startColumn": 23,
                  "endLine": 108,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'target_type' to 'targetType' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Viewport3DFactory.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 35,
                  "endLine": 9,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 26 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/IRead.Extension.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 30,
                  "endLine": 56,
                  "endColumn": 34
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/IRead.Extension.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 13,
                  "endLine": 58,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/IRead.Extension.cs",
                "region": {
                  "startLine": 63,
                  "startColumn": 13,
                  "endLine": 63,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/IRead.Extension.cs",
                "region": {
                  "startLine": 63,
                  "startColumn": 40,
                  "endLine": 63,
                  "endColumn": 42
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/IRead.Extension.cs",
                "region": {
                  "startLine": 68,
                  "startColumn": 17,
                  "endLine": 68,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/IRead.Extension.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 21,
                  "endLine": 70,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/IRead.Extension.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 25,
                  "endLine": 75,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/IRead.Extension.cs",
                "region": {
                  "startLine": 79,
                  "startColumn": 17,
                  "endLine": 79,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/IRead.Extension.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 13,
                  "endLine": 84,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/IRead.Extension.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 21,
                  "endLine": 90,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/IRead.Extension.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 13,
                  "endLine": 94,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/IRead.Extension.cs",
                "region": {
                  "startLine": 97,
                  "startColumn": 17,
                  "endLine": 97,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/IRead.Extension.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 21,
                  "endLine": 100,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/IRead.Extension.cs",
                "region": {
                  "startLine": 104,
                  "startColumn": 25,
                  "endLine": 104,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+2 (incl 1 for nesting)",
              "11": "+3 (incl 2 for nesting)",
              "12": "+4 (incl 3 for nesting)",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+1",
              "7": "+1",
              "8": "+2 (incl 1 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 208,
                  "startColumn": 69,
                  "endLine": 208,
                  "endColumn": 100
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/DoubleFactory.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 35,
                  "endLine": 12,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 16 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 179,
                  "startColumn": 22,
                  "endLine": 179,
                  "endColumn": 38
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 188,
                  "startColumn": 13,
                  "endLine": 188,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 192,
                  "startColumn": 17,
                  "endLine": 192,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 192,
                  "startColumn": 57,
                  "endLine": 192,
                  "endColumn": 59
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 193,
                  "startColumn": 17,
                  "endLine": 193,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 195,
                  "startColumn": 21,
                  "endLine": 195,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 199,
                  "startColumn": 21,
                  "endLine": 199,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 208,
                  "startColumn": 21,
                  "endLine": 208,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 208,
                  "startColumn": 37,
                  "endLine": 208,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 215,
                  "startColumn": 21,
                  "endLine": 215,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/JSONWriter.cs",
                "region": {
                  "startLine": 226,
                  "startColumn": 13,
                  "endLine": 226,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+1",
              "6": "+3 (incl 2 for nesting)",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 684,
                  "startColumn": 6,
                  "endLine": 684,
                  "endColumn": 8
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 682,
                  "startColumn": 5,
                  "endLine": 682,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1168",
          "level": "warning",
          "message": "Return an empty collection instead of null.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 688,
                  "startColumn": 4,
                  "endLine": 688,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/IFactory.Extension.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 17,
                  "endLine": 11,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/IFactory.Extension.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 13,
                  "endLine": 9,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/IFactory.Extension.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 21,
                  "endLine": 11,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "True"
            }
          }
        },
        {
          "ruleId": "S2589",
          "level": "warning",
          "message": "Change this condition so that it does not always evaluate to 'true'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 699,
                  "startColumn": 10,
                  "endLine": 699,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 696,
                  "startColumn": 9,
                  "endLine": 696,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "True"
            }
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'target_type' to 'targetType' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/LightFactory.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 35,
                  "endLine": 10,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 718,
                  "startColumn": 6,
                  "endLine": 718,
                  "endColumn": 8
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 716,
                  "startColumn": 5,
                  "endLine": 716,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 718,
                  "startColumn": 10,
                  "endLine": 718,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "True"
            }
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/LightFactory.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 21,
                  "endLine": 16,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/LightFactory.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 21,
                  "endLine": 17,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "True"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/LightFactory.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 17,
                  "endLine": 26,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/LightFactory.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 13,
                  "endLine": 24,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'target_type' to 'targetType' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Factory.cs",
                "region": {
                  "startLine": 98,
                  "startColumn": 29,
                  "endLine": 98,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Factory.cs",
                "region": {
                  "startLine": 123,
                  "startColumn": 8,
                  "endLine": 123,
                  "endColumn": 10
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Factory.cs",
                "region": {
                  "startLine": 121,
                  "startColumn": 7,
                  "endLine": 121,
                  "endColumn": 9
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Factory.cs",
                "region": {
                  "startLine": 121,
                  "startColumn": 29,
                  "endLine": 121,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 29 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Factory.cs",
                "region": {
                  "startLine": 98,
                  "startColumn": 17,
                  "endLine": 98,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Factory.cs",
                "region": {
                  "startLine": 101,
                  "startColumn": 4,
                  "endLine": 101,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Factory.cs",
                "region": {
                  "startLine": 101,
                  "startColumn": 23,
                  "endLine": 101,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Factory.cs",
                "region": {
                  "startLine": 104,
                  "startColumn": 5,
                  "endLine": 104,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Factory.cs",
                "region": {
                  "startLine": 106,
                  "startColumn": 6,
                  "endLine": 106,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Factory.cs",
                "region": {
                  "startLine": 107,
                  "startColumn": 6,
                  "endLine": 107,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Factory.cs",
                "region": {
                  "startLine": 112,
                  "startColumn": 4,
                  "endLine": 112,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Factory.cs",
                "region": {
                  "startLine": 114,
                  "startColumn": 5,
                  "endLine": 114,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Factory.cs",
                "region": {
                  "startLine": 117,
                  "startColumn": 6,
                  "endLine": 117,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Factory.cs",
                "region": {
                  "startLine": 119,
                  "startColumn": 7,
                  "endLine": 119,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Factory.cs",
                "region": {
                  "startLine": 120,
                  "startColumn": 7,
                  "endLine": 120,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Factory.cs",
                "region": {
                  "startLine": 121,
                  "startColumn": 7,
                  "endLine": 121,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Factory.cs",
                "region": {
                  "startLine": 121,
                  "startColumn": 26,
                  "endLine": 121,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/Factory.cs",
                "region": {
                  "startLine": 123,
                  "startColumn": 8,
                  "endLine": 123,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+4 (incl 3 for nesting)",
              "11": "+1",
              "12": "+5 (incl 4 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+1",
              "5": "+1",
              "6": "+2 (incl 1 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+4 (incl 3 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 21 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 733,
                  "startColumn": 21,
                  "endLine": 733,
                  "endColumn": 30
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 741,
                  "startColumn": 4,
                  "endLine": 741,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 743,
                  "startColumn": 4,
                  "endLine": 743,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 745,
                  "startColumn": 4,
                  "endLine": 745,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 750,
                  "startColumn": 5,
                  "endLine": 750,
                  "endColumn": 10
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 756,
                  "startColumn": 6,
                  "endLine": 756,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 759,
                  "startColumn": 7,
                  "endLine": 759,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 764,
                  "startColumn": 7,
                  "endLine": 764,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 767,
                  "startColumn": 8,
                  "endLine": 767,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+4 (incl 3 for nesting)",
              "7": "+5 (incl 4 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 783,
                  "startColumn": 6,
                  "endLine": 783,
                  "endColumn": 8
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Extension/IDictionary.Extension.cs",
                "region": {
                  "startLine": 781,
                  "startColumn": 5,
                  "endLine": 781,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'target_type' to 'targetType' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ColorFactory.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 35,
                  "endLine": 11,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ColorFactory.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 17,
                  "endLine": 15,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ColorFactory.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 13,
                  "endLine": 13,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ColorFactory.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 21,
                  "endLine": 15,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 16 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/Point.Extension.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 23,
                  "endLine": 84,
                  "endColumn": 41
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/Point.Extension.cs",
                "region": {
                  "startLine": 86,
                  "startColumn": 4,
                  "endLine": 86,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/Point.Extension.cs",
                "region": {
                  "startLine": 86,
                  "startColumn": 26,
                  "endLine": 86,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/Point.Extension.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 5,
                  "endLine": 89,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/Point.Extension.cs",
                "region": {
                  "startLine": 93,
                  "startColumn": 6,
                  "endLine": 93,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/Point.Extension.cs",
                "region": {
                  "startLine": 97,
                  "startColumn": 7,
                  "endLine": 97,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/Point.Extension.cs",
                "region": {
                  "startLine": 98,
                  "startColumn": 7,
                  "endLine": 98,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/Point.Extension.cs",
                "region": {
                  "startLine": 106,
                  "startColumn": 4,
                  "endLine": 106,
                  "endColumn": 6
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+1"
            }
          }
        },
        {
          "ruleId": "S1854",
          "level": "warning",
          "message": "Remove this useless assignment to local variable 'deltaZ'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/Matrix3D.Extension.cs",
                "region": {
                  "startLine": 157,
                  "startColumn": 24,
                  "endLine": 157,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'target_type' to 'targetType' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ResourceFactory.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 35,
                  "endLine": 8,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'IsInstanceOfType()' method instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/ResourceFactory.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 41,
                  "endLine": 13,
                  "endColumn": 89
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "False"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/MaterialFactory.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 17,
                  "endLine": 15,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/MaterialFactory.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 13,
                  "endLine": 13,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/MaterialFactory.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 21,
                  "endLine": 15,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "True"
            }
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'target_type' to 'targetType' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/CollectionsFactory.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 35,
                  "endLine": 9,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/CollectionsFactory.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 17,
                  "endLine": 13,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/CollectionsFactory.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 13,
                  "endLine": 11,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'target_type' to 'targetType' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/BrushFactory.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 35,
                  "endLine": 8,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/BrushFactory.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 21,
                  "endLine": 12,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/BrushFactory.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 21,
                  "endLine": 13,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "True"
            }
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/CollectionsFactory.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 21,
                  "endLine": 13,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 17 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/CollectionsFactory.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 23,
                  "endLine": 9,
                  "endColumn": 29
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/CollectionsFactory.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 13,
                  "endLine": 11,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/CollectionsFactory.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 17,
                  "endLine": 13,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/CollectionsFactory.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 21,
                  "endLine": 16,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/CollectionsFactory.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 25,
                  "endLine": 20,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/CollectionsFactory.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 13,
                  "endLine": 25,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/CollectionsFactory.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 17,
                  "endLine": 28,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/CollectionsFactory.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 13,
                  "endLine": 30,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/CollectionsFactory.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 17,
                  "endLine": 33,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/CollectionsFactory.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 23,
                  "endLine": 9,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+1",
              "7": "+2 (incl 1 for nesting)",
              "8": "+1 (recursion)"
            }
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'target_type' to 'targetType' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/AbstractFactory.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 35,
                  "endLine": 19,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2259",
          "level": "warning",
          "message": "'source' is null on at least one execution path.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/AbstractFactory.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 29,
                  "endLine": 33,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'IsInstanceOfType()' method instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/AbstractFactory.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 39,
                  "endLine": 26,
                  "endColumn": 85
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "False"
            }
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/AbstractFactory.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 29,
                  "endLine": 37,
                  "endColumn": 78
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "True"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 21 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/AbstractFactory.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 23,
                  "endLine": 19,
                  "endColumn": 29
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/AbstractFactory.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 13,
                  "endLine": 21,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/AbstractFactory.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 13,
                  "endLine": 23,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/AbstractFactory.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 32,
                  "endLine": 23,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/AbstractFactory.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 17,
                  "endLine": 26,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/AbstractFactory.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 36,
                  "endLine": 26,
                  "endColumn": 38
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/AbstractFactory.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 13,
                  "endLine": 28,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/AbstractFactory.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 17,
                  "endLine": 31,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/AbstractFactory.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/AbstractFactory.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/AbstractFactory.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 13,
                  "endLine": 46,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/AbstractFactory.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 17,
                  "endLine": 49,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/AbstractFactory.cs",
                "region": {
                  "startLine": 55,
                  "startColumn": 13,
                  "endLine": 55,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/AbstractFactory.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 13,
                  "endLine": 59,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+2 (incl 1 for nesting)",
              "11": "+1",
              "12": "+1",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+1",
              "5": "+1",
              "6": "+2 (incl 1 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+4 (incl 3 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove this unused 's' local variable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/AbstractFactory.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 25,
                  "endLine": 33,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3427",
          "level": "warning",
          "message": "This method signature overlaps the one defined on line 23, the default parameter value can only be used with named arguments.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/Visual.Extension.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 104,
                  "endLine": 27,
                  "endColumn": 120
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'original_stream' to 'stream' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Reader.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 29,
                  "endLine": 24,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'is' operator instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/AbstractFactory.cs",
                "region": {
                  "startLine": 93,
                  "startColumn": 43,
                  "endLine": 93,
                  "endColumn": 77
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2219",
          "level": "warning",
          "message": "Use the 'IsInstanceOfType()' method instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/AbstractFactory.cs",
                "region": {
                  "startLine": 103,
                  "startColumn": 25,
                  "endLine": 103,
                  "endColumn": 73
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ShouldRemoveGetType": "True",
              "UseIsOperator": "False"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 21 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/AbstractFactory.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 24,
                  "endLine": 80,
                  "endColumn": 40
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/AbstractFactory.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 13,
                  "endLine": 82,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/AbstractFactory.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 13,
                  "endLine": 83,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/AbstractFactory.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 17,
                  "endLine": 89,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/AbstractFactory.cs",
                "region": {
                  "startLine": 93,
                  "startColumn": 21,
                  "endLine": 93,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/AbstractFactory.cs",
                "region": {
                  "startLine": 93,
                  "startColumn": 40,
                  "endLine": 93,
                  "endColumn": 42
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/AbstractFactory.cs",
                "region": {
                  "startLine": 96,
                  "startColumn": 25,
                  "endLine": 96,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/AbstractFactory.cs",
                "region": {
                  "startLine": 97,
                  "startColumn": 25,
                  "endLine": 97,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/AbstractFactory.cs",
                "region": {
                  "startLine": 101,
                  "startColumn": 17,
                  "endLine": 101,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/AbstractFactory.cs",
                "region": {
                  "startLine": 103,
                  "startColumn": 21,
                  "endLine": 103,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Beta/Internal/Factories/AbstractFactory.cs",
                "region": {
                  "startLine": 104,
                  "startColumn": 21,
                  "endLine": 104,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+1",
              "5": "+4 (incl 3 for nesting)",
              "6": "+1",
              "7": "+2 (incl 1 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Reader.cs",
                "region": {
                  "startLine": 110,
                  "startColumn": 13,
                  "endLine": 110,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1168",
          "level": "warning",
          "message": "Return an empty collection instead of null.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/Point.Extension.cs",
                "region": {
                  "startLine": 310,
                  "startColumn": 4,
                  "endLine": 310,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove this unused 'pointFs' local variable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/Point.Extension.cs",
                "region": {
                  "startLine": 216,
                  "startColumn": 8,
                  "endLine": 216,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove this unused 'dims' local variable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/Point.Extension.cs",
                "region": {
                  "startLine": 226,
                  "startColumn": 8,
                  "endLine": 226,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove this unused 'pointFs' local variable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/Point.Extension.cs",
                "region": {
                  "startLine": 230,
                  "startColumn": 8,
                  "endLine": 230,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 20 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/Point.Extension.cs",
                "region": {
                  "startLine": 286,
                  "startColumn": 22,
                  "endLine": 286,
                  "endColumn": 35
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/Point.Extension.cs",
                "region": {
                  "startLine": 288,
                  "startColumn": 4,
                  "endLine": 288,
                  "endColumn": 6
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/Point.Extension.cs",
                "region": {
                  "startLine": 291,
                  "startColumn": 5,
                  "endLine": 291,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/Point.Extension.cs",
                "region": {
                  "startLine": 293,
                  "startColumn": 6,
                  "endLine": 293,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/Point.Extension.cs",
                "region": {
                  "startLine": 294,
                  "startColumn": 6,
                  "endLine": 294,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/Point.Extension.cs",
                "region": {
                  "startLine": 295,
                  "startColumn": 6,
                  "endLine": 295,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/Point.Extension.cs",
                "region": {
                  "startLine": 295,
                  "startColumn": 33,
                  "endLine": 295,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/Point.Extension.cs",
                "region": {
                  "startLine": 296,
                  "startColumn": 6,
                  "endLine": 296,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/Point.Extension.cs",
                "region": {
                  "startLine": 296,
                  "startColumn": 33,
                  "endLine": 296,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/Point.Extension.cs",
                "region": {
                  "startLine": 299,
                  "startColumn": 4,
                  "endLine": 299,
                  "endColumn": 8
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/work/github/node-net/Node.Net/Node.Net/Extension/Point.Extension.cs",
                "region": {
                  "startLine": 303,
                  "startColumn": 5,
                  "endLine": 303,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+1",
              "6": "+3 (incl 2 for nesting)",
              "7": "+1",
              "8": "+1",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        }
      ],
      "rules": {
        "CS0618": {
          "id": "CS0618",
          "shortDescription": "Type or member is obsolete",
          "defaultLevel": "warning",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S101": {
          "id": "S101",
          "shortDescription": "Types should be named in camel case",
          "fullDescription": "Shared naming conventions allow teams to collaborate efficiently. This rule checks whether or not type names are camel cased. To reduce noise, two consecutive upper case characters are allowed unless they form the whole type name. So, MyXClass is compliant, but XC on its own is not.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-101",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true
          }
        },
        "S1066": {
          "id": "S1066",
          "shortDescription": "Collapsible \"if\" statements should be merged",
          "fullDescription": "Merging collapsible if statements increases the code's readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1066",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true
          }
        },
        "S108": {
          "id": "S108",
          "shortDescription": "Nested blocks of code should not be left empty",
          "fullDescription": "Most of the time a block of code is empty when a piece of code is really missing. So such empty block must be either filled or removed.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-108",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true
          }
        },
        "S1104": {
          "id": "S1104",
          "shortDescription": "Fields should not have public accessibility",
          "fullDescription": "Public fields in public classes do not respect the encapsulation principle and has three main disadvantages:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1104",
          "properties": {
            "category": "Minor Vulnerability",
            "isEnabledByDefault": true
          }
        },
        "S1117": {
          "id": "S1117",
          "shortDescription": "Local variables should not shadow class fields",
          "fullDescription": "Shadowing fields with a local variable is a bad practice that reduces code readability: it makes it confusing to know whether the field or the variable is being used.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1117",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true
          }
        },
        "S1118": {
          "id": "S1118",
          "shortDescription": "Utility classes should not have public constructors",
          "fullDescription": "Utility classes, which are collections of static members, are not meant to be instantiated. Even abstract utility classes, which can be extended, should not have public constructors.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1118",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true
          }
        },
        "S112": {
          "id": "S112",
          "shortDescription": "General exceptions should never be thrown",
          "fullDescription": "Throwing such general exceptions as Exception, SystemException, ApplicationException, IndexOutOfRangeException, NullReferenceException, OutOfMemoryException and ExecutionEngineException prevents calling methods from handling true, system-generated exceptions differently than application-generated errors. ",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-112",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true
          }
        },
        "S1135": {
          "id": "S1135",
          "shortDescription": "Track uses of \"TODO\" tags",
          "fullDescription": "TODO tags are commonly used to mark places where some more code is required, but which the developer wants to implement later.",
          "defaultLevel": "note",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1135",
          "properties": {
            "category": "Info Code Smell",
            "isEnabledByDefault": false
          }
        },
        "S1168": {
          "id": "S1168",
          "shortDescription": "Empty arrays and collections should be returned instead of null",
          "fullDescription": "Returning null instead of an actual array or collection forces callers of the method to explicitly test for nullity, making them more complex and less readable.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1168",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true
          }
        },
        "S1172": {
          "id": "S1172",
          "shortDescription": "Unused method parameters should be removed",
          "fullDescription": "Unused parameters are misleading. Whatever the values passed to such parameters, the behavior will be the same.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1172",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "Unnecessary"
            ]
          }
        },
        "S125": {
          "id": "S125",
          "shortDescription": "Sections of code should not be \"commented out\"",
          "fullDescription": "Programmers should not comment out code as it bloats programs and reduces readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-125",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true
          }
        },
        "S1450": {
          "id": "S1450",
          "shortDescription": "Private fields only used as local variables in methods should become local variables",
          "fullDescription": "When the value of a private field is always assigned to in a class' methods before being read, then it is not being used to store class information. Therefore, it should become a local variable in the relevant methods to prevent any misunderstanding.",
          "defaultLevel": "note",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1450",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "Unnecessary"
            ]
          }
        },
        "S1481": {
          "id": "S1481",
          "shortDescription": "Unused local variables should be removed",
          "fullDescription": "If a local variable is declared but not used, it is dead code and should be removed. Doing so will improve maintainability because developers will not wonder what the variable is used for.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1481",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true
          }
        },
        "S1854": {
          "id": "S1854",
          "shortDescription": "Dead stores should be removed",
          "fullDescription": "A dead store happens when a local variable is assigned a value that is not read by any subsequent instruction. Calculating or retrieving a value only to then overwrite it or throw it away, could indicate a serious error in the code. Even if it's not an error, it is at best a waste of resources. Therefore all calculated values should be used.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1854",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true
          }
        },
        "S1905": {
          "id": "S1905",
          "shortDescription": "Redundant casts should not be used",
          "fullDescription": "Unnecessary casting expressions make the code harder to read and understand.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1905",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "Unnecessary"
            ]
          }
        },
        "S1939": {
          "id": "S1939",
          "shortDescription": "Inheritance list should not be redundant",
          "fullDescription": "An inheritance list entry is redundant if:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1939",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "Unnecessary"
            ]
          }
        },
        "S2184": {
          "id": "S2184",
          "shortDescription": "Results of integer division should not be assigned to floating point variables",
          "fullDescription": "When division is performed on ints, the result will always be an int. You can assign that result to a double, float or decimal with automatic type conversion, but having started as an int, the result will likely not be what you expect. If the result of int division is assigned to a floating-point variable, precision will have been lost before the assignment. Instead, at least one operand should be cast or promoted to the final type before the operation takes place.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2184",
          "properties": {
            "category": "Minor Bug",
            "isEnabledByDefault": true
          }
        },
        "S2190": {
          "id": "S2190",
          "shortDescription": "Recursion should not be infinite",
          "fullDescription": "Recursion happens when control enters a loop that has no exit. This can happen a method invokes itself, when a pair of methods invoke each other, or when gotos are used to move between two segments of code. It can be a useful tool, but unless the method includes a provision to break out of the recursion and return, the recursion will continue until the stack overflows and the program crashes.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2190",
          "properties": {
            "category": "Blocker Bug",
            "isEnabledByDefault": true
          }
        },
        "S2219": {
          "id": "S2219",
          "shortDescription": "Runtime type checking should be simplified",
          "fullDescription": "To check the type of an object there are several options:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2219",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true
          }
        },
        "S2223": {
          "id": "S2223",
          "shortDescription": "Non-constant static fields should not be visible",
          "fullDescription": "A static field that is neither constant nor read-only is not thread-safe. Correctly accessing these fields from different threads needs synchronization with locks. Improper synchronization may lead to unexpected results, thus publicly visible static fields are best suited for storing non-changing data shared by many consumers. To enforce this intent, these fields should be marked readonly or converted to constants.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2223",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true
          }
        },
        "S2259": {
          "id": "S2259",
          "shortDescription": "Null pointers should not be dereferenced",
          "fullDescription": "A reference to null should never be dereferenced/accessed. Doing so will cause a NullReferenceException to be thrown. At best, such an exception will cause abrupt program termination. At worst, it could expose debugging information that would be useful to an attacker, or it could allow an attacker to bypass security measures.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2259",
          "properties": {
            "category": "Major Bug",
            "isEnabledByDefault": true
          }
        },
        "S2292": {
          "id": "S2292",
          "shortDescription": "Trivial properties should be auto-implemented",
          "fullDescription": "Trivial properties, which include no logic but setting and getting a backing field should be converted to auto-implemented properties, yielding cleaner and more readable code.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2292",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true
          }
        },
        "S2342": {
          "id": "S2342",
          "shortDescription": "Enumeration types should comply with a naming convention",
          "fullDescription": "Shared naming conventions allow teams to collaborate efficiently. This rule checks that all enum names match a provided regular expression.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2342",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true
          }
        },
        "S2386": {
          "id": "S2386",
          "shortDescription": "Mutable fields should not be \"public static\"",
          "fullDescription": "public static mutable fields of classes which are accessed directly should be protected to the degree possible. This can be done by reducing the accessibility of the field or by changing the return type to an immutable type.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2386",
          "properties": {
            "category": "Minor Vulnerability",
            "isEnabledByDefault": true
          }
        },
        "S2486": {
          "id": "S2486",
          "shortDescription": "Generic exceptions should not be ignored",
          "fullDescription": "When exceptions occur, it is usually a bad idea to simply ignore them. Instead, it is better to handle them properly, or at least to log them.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2486",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true
          }
        },
        "S2583": {
          "id": "S2583",
          "shortDescription": "Conditionally executed blocks should be reachable",
          "fullDescription": "Conditional expressions which are always true or false can lead to dead code. Such code is always buggy and should never be used in production.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2583",
          "properties": {
            "category": "Major Bug",
            "isEnabledByDefault": true
          }
        },
        "S2589": {
          "id": "S2589",
          "shortDescription": "Boolean expressions should not be gratuitous",
          "fullDescription": "If a boolean expression doesn't change the evaluation of the condition, then it is entirely unnecessary, and can be removed. If it is gratuitous because it does not match the programmer's intent, then it's a bug and the expression should be fixed.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2589",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true
          }
        },
        "S2930": {
          "id": "S2930",
          "shortDescription": "\"IDisposables\" should be disposed",
          "fullDescription": "When writing managed code, you don't need to worry about allocating or freeing memory: The garbage collector takes care of it. For efficiency reasons, some objects such as Bitmap use unmanaged memory, enabling for example the use of pointer arithmetic. Such objects have potentially huge unmanaged memory footprints, but will have tiny managed ones. Unfortunately, the garbage collector only sees the tiny managed footprint, and fails to reclaim the unmanaged memory (by calling Bitmap's finalizer method) in a timely fashion. ",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2930",
          "properties": {
            "category": "Blocker Bug",
            "isEnabledByDefault": true
          }
        },
        "S2933": {
          "id": "S2933",
          "shortDescription": "Fields that are only assigned in the constructor should be \"readonly\"",
          "fullDescription": "readonly fields can only be assigned in a class constructor. If a class has a field that's not marked readonly but is only set in the constructor, it could cause confusion about the field's intended use. To avoid confusion, such fields should be marked readonly to make their intended use explicit, and to prevent future maintainers from inadvertently changing their use.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2933",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true
          }
        },
        "S3217": {
          "id": "S3217",
          "shortDescription": "\"Explicit\" conversions of \"foreach\" loops should not be used",
          "fullDescription": "The foreach statement was introduced in the C# language prior to generics to make it easier to work with the non-generic collections available at that time such as ArrayList. The foreach statements allows you to downcast elements of a collection of Objects to any other type. The problem is that to achieve the cast, the foreach statements silently performs explicit type conversion, which at runtime can result in an InvalidCastException.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3217",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true
          }
        },
        "S3427": {
          "id": "S3427",
          "shortDescription": "Method overloads with default parameter values should not overlap ",
          "fullDescription": "The rules for method resolution are complex and perhaps not properly understood by all coders. Having overloads with optional parameter values makes the matter even harder to understand. ",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3427",
          "properties": {
            "category": "Blocker Code Smell",
            "isEnabledByDefault": true
          }
        },
        "S3443": {
          "id": "S3443",
          "shortDescription": "Type should not be examined on \"System.Type\" instances",
          "fullDescription": "If you call GetType() on a Type variable, the return value will always be typeof(System.Type). So there's no real point in making that call. The same applies to passing a type argument to IsInstanceOfType. In both cases the results are entirely predictable.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3443",
          "properties": {
            "category": "Blocker Code Smell",
            "isEnabledByDefault": true
          }
        },
        "S3776": {
          "id": "S3776",
          "shortDescription": "Cognitive Complexity of methods should not be too high",
          "fullDescription": "Cognitive Complexity is a measure of how hard the control flow of a method is to understand. Methods with high Cognitive Complexity will be difficult to maintain.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3776",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": false
          }
        },
        "S3881": {
          "id": "S3881",
          "shortDescription": "\"IDisposable\" should be implemented correctly",
          "fullDescription": "The IDisposable interface is a mechanism to release unmanaged resources, if not implemented correctly this could result in resource leaks or more severe bugs.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3881",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true
          }
        },
        "S3925": {
          "id": "S3925",
          "shortDescription": "\"ISerializable\" should be implemented correctly",
          "fullDescription": "The ISerializable interface is the mechanism to control the type serialization process. If not implemented correctly this could result in an invalid serialization and hard to detect bugs.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3925",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true
          }
        },
        "S927": {
          "id": "S927",
          "shortDescription": "parameter names should match base declaration and other partial definitions",
          "fullDescription": "The name of a parameter in an externally visible method override does not match the name of the parameter in the base declaration of the method, or the name of the parameter in the interface declaration of the method or the name of any other partial definition.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-927",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true
          }
        }
      }
    }
  ]
}